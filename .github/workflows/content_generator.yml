name: Content Generator

on:
  schedule:
    # Run every 4 hours
    - cron: '0 */4 * * *'
  workflow_dispatch:
    # Allow manual trigger

jobs:
  generate-content:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.PAT_TOKEN }}
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y wget unzip xvfb
        
        # Install Chrome
        wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
        echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable

    - name: Setup ChromeDriver
      run: |
        # ChromeDriver will be automatically managed by webdriver-manager in the Python scripts
        # Just ensure Chrome is available and add it to PATH
        which google-chrome || echo "Chrome not found"
        google-chrome --version

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r python/requirements.txt

    - name: Set up environment variables
      run: |
        echo "GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}" >> $GITHUB_ENV

    - name: Create temp directory
      run: |
        mkdir -p temp

    - name: Configure Git
      run: |
        git config --global user.name "Content Generator Bot"
        git config --global user.email "action@github.com"

    - name: Pull latest changes
      run: |
        git pull origin main

    - name: Run trends_check.py
      run: |
        python python/trends_check.py
        echo "trends_check.py completed"
        ls -la temp/ || echo "temp directory not found"
      env:
        DISPLAY: :99
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}

    - name: Commit and push after trends_check
      run: |
        git add -A
        if ! git diff --staged --quiet; then
          git commit -m "Update after trends_check - $(date '+%Y-%m-%d %H:%M:%S')"
          git push origin main
          echo "Changes committed and pushed after trends_check"
        else
          echo "No changes to commit after trends_check"
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}

    - name: Pull latest changes before search_articles
      run: |
        git pull origin main

    - name: Run search_articles.py
      run: |
        python python/search_articles.py
        echo "search_articles.py completed"
        ls -la temp/ || echo "temp directory not found"
        if [ -f "temp/article_analysis.json" ]; then
          echo "article_analysis.json created successfully"
          head -10 temp/article_analysis.json
        else
          echo "ERROR: article_analysis.json not found!"
          exit 1
        fi
      env:
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}

    - name: Commit and push after search_articles
      run: |
        git add -A
        if ! git diff --staged --quiet; then
          git commit -m "Update after search_articles - $(date '+%Y-%m-%d %H:%M:%S')"
          git push origin main
          echo "Changes committed and pushed after search_articles"
        else
          echo "No changes to commit after search_articles"
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}

    - name: Pull latest changes before content_generator
      run: |
        git pull origin main

    - name: Run content_generator.py
      run: |
        echo "Loading articles..."
        if [ -f "temp/article_analysis.json" ]; then
          echo "article_analysis.json found, proceeding with content generation"
        else
          echo "ERROR: article_analysis.json not found!"
          ls -la temp/ || echo "temp directory not found"
          exit 1
        fi
        python python/content_generator.py
        echo "content_generator.py completed"
      env:
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}

    - name: Commit and push after content_generator
      run: |
        git add -A
        if ! git diff --staged --quiet; then
          git commit -m "Update after content_generator - $(date '+%Y-%m-%d %H:%M:%S')"
          git push origin main
          echo "Changes committed and pushed after content_generator"
        else
          echo "No changes to commit after content_generator"
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}

    - name: Pull latest changes before html_generator
      run: |
        git pull origin main

    - name: Run html_generator.py
      run: |
        python python/html_generator.py
        echo "html_generator.py completed"
      env:
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}

    - name: Commit and push after html_generator
      run: |
        git add -A
        if ! git diff --staged --quiet; then
          git commit -m "Update after html_generator - $(date '+%Y-%m-%d %H:%M:%S')"
          git push origin main
          echo "Changes committed and pushed after html_generator"
        else
          echo "No changes to commit after html_generator"
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}

    - name: Pull latest changes before clear_temp
      run: |
        git pull origin main

    - name: Run clear_temp.py
      run: |
        python python/clear_temp.py
        echo "clear_temp.py completed"

    - name: Commit and push after clear_temp
      run: |
        git add -A
        if ! git diff --staged --quiet; then
          git commit -m "Update after clear_temp - $(date '+%Y-%m-%d %H:%M:%S')"
          git push origin main
          echo "Changes committed and pushed after clear_temp"
        else
          echo "No changes to commit after clear_temp"
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}

    - name: Pull latest changes before sitemap_generator
      run: |
        git pull origin main

    - name: Run sitemap_generator.py
      run: |
        python python/sitemap_generator.py
        echo "sitemap_generator.py completed"

    - name: Commit and push after sitemap_generator
      run: |
        git add -A
        if ! git diff --staged --quiet; then
          git commit -m "Update after sitemap_generator - $(date '+%Y-%m-%d %H:%M:%S')"
          git push origin main
          echo "Changes committed and pushed after sitemap_generator"
        else
          echo "No changes to commit after sitemap_generator"
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}

    - name: Final status check
      run: |
        echo "Content generation workflow completed successfully!"
        echo "All scripts have been executed and changes committed individually."
        git log --oneline -5